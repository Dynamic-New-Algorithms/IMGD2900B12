### oppen to puplic use
    Dynamic New Algorithms
    William Decker
    Peter Lepper
###
class room

  constructor: (height,width)->
    @height = height
    @width = width
    @layers = []
    base = []
    for x in [0..width-1]
      col = []
      for y in [0..height-1]
        col.push({r:0, g:0, b:0})
      base.push(col)
    @layers.push(base)

  draw: () ->
    img = {width: @width,height: @height,pixelSize: 3, data: []}

    for y in [0..@height-1]
      for x in [0..@width-1]
        layer = @layers.length - 1
        while @layers[layer][x][y].r == 0 and  @layers[layer][x][y].g == 255 and  @layers[layer][x][y].b == 0
          layer -= 1
          break if layer == 0

        img.data.push(@layers[layer][x][y].r)
        img.data.push(@layers[layer][x][y].g)
        img.data.push(@layers[layer][x][y].b)
    PS.ImageBlit(img)

class thing
  constructor: (x,y,img_data) ->
    cd = []
    pi = 0
    for yi in [0..(img_data.height-1)]
      row = []
      for xi in [0..(img_data.width-1)]
        row.push({r:img_data.data[pi],g:img_data.data[pi+1],b:img_data.data[pi+2]})
        pi += 3
      cd.push(row)
    @core_data = []
    for xi in [0..(img_data.width-1)]
      col = []
      for yi in [0..(img_data.height-1)]
        col.push(cd[yi][xi])
        pi += 3
      @core_data.push(col)
    @w = img_data.width
    @h = img_data.height
    @x = x
    @y = y
    @layer = []
    this.build_layer(32,32)

  build_layer: (height,width) ->
    @layer = []
    ### make the transparent part ###
    for x in [0..width-1]
      col = []
      for y in [0..height-1]
        col.push({r: 0,g: 255,b:0})
      @layer.push(col)
    ### build the actual image part ###
    xi = 0
    for x in [@x..(@x+@w-1)]
      yi = 0
      for y in [@y..(@y+@h-1)]
        @layer[x][y] = @core_data[xi][yi] if x >= 0 and x < width and y >= 0  and y < height
        yi += 1
      xi += 1

debug = (response) ->
  property_names = ""
  for propertyName of response
    ### propertyName is what you want###
    property_names += propertyName + " = " + response[propertyName] + "\n"
  alert property_names
###------------------------------------------ Global Vars ----------------------------------------- ###

G =
  GRID:
    WIDTH: 32
    HEIGHT: 32
IMG =
  test_room: {width: 32,height: 32, pixelSize: 3, data: [255,255,255,254,254,254,221,221,221,220,220,220,220,220,220,221,221,221,254,254,254,255,255,255,255,255,253,253,253,253,252,252,254,255,255,255,255,255,255,254,254,255,254,254,254,255,255,255,255,255,255,254,254,254,254,254,255,255,255,255,255,255,255,252,252,254,253,253,253,255,255,253,255,255,255,254,254,254,221,221,221,220,220,220,220,220,220,221,221,221,254,254,254,255,255,255,255,255,255,254,254,254,221,221,221,220,220,220,220,220,220,221,221,221,254,254,254,255,255,255,255,255,253,254,254,254,255,255,255,255,255,255,247,247,249,255,255,255,254,254,252,255,255,253,255,255,253,254,254,252,255,255,255,247,247,249,255,255,255,255,255,255,254,254,254,255,255,253,255,255,255,254,254,254,221,221,221,220,220,220,220,220,220,221,221,221,254,254,254,255,255,255,255,255,255,254,254,254,221,221,221,220,220,220,220,220,220,221,221,221,254,254,254,255,255,255,250,250,250,255,255,255,253,253,253,252,252,252,255,255,255,255,255,253,187,188,183,193,194,188,193,194,188,187,188,183,255,255,253,255,255,255,252,252,252,253,253,253,255,255,255,250,250,250,255,255,255,254,254,254,221,221,221,220,220,220,220,220,220,221,221,221,254,254,254,255,255,255,255,255,255,254,254,254,221,221,221,220,220,220,220,220,220,221,221,221,254,254,254,255,255,255,255,255,255,255,255,255,254,254,254,252,252,252,254,254,252,255,255,251,190,191,185,225,226,218,225,226,218,190,191,185,255,255,251,254,254,252,252,252,252,254,254,254,255,255,255,255,255,255,255,255,255,254,254,254,221,221,221,220,220,220,220,220,220,221,221,221,254,254,254,255,255,255,255,255,255,254,254,254,221,221,221,220,220,220,220,220,220,221,221,221,254,254,254,255,255,255,255,254,255,247,245,246,254,252,253,255,254,255,255,255,253,251,250,246,195,194,189,187,187,179,187,187,179,195,194,189,251,250,246,255,255,253,255,254,255,254,252,253,247,245,246,255,254,255,255,255,255,254,254,254,221,221,221,220,220,220,220,220,220,221,221,221,254,254,254,255,255,255,255,255,255,254,254,254,221,221,221,220,220,220,220,220,220,221,221,221,254,254,254,255,255,255,254,252,253,255,254,255,255,254,255,251,249,250,255,254,255,255,255,253,255,255,251,255,255,250,255,255,250,255,255,251,255,255,253,255,254,255,251,249,250,255,254,255,255,254,255,254,252,253,255,255,255,254,254,254,221,221,221,220,220,220,220,220,220,221,221,221,254,254,254,255,255,255,255,255,255,254,254,254,221,221,221,220,220,220,220,220,220,221,221,221,254,254,254,255,255,255,255,255,253,249,247,248,151,149,150,147,145,148,148,146,149,143,141,142,139,138,136,147,146,144,147,146,144,139,138,136,143,141,142,148,146,149,147,145,148,151,149,150,249,247,248,255,255,253,255,255,255,254,254,254,221,221,221,220,220,220,220,220,220,221,221,221,254,254,254,255,255,255,255,255,255,254,254,254,221,221,221,220,220,220,220,220,220,221,221,221,254,254,254,255,255,255,255,255,253,255,253,254,143,141,144,213,211,214,204,202,205,217,215,218,208,206,207,212,210,211,212,210,211,208,206,207,217,215,218,204,202,205,213,211,214,143,141,144,255,253,254,255,255,253,255,255,255,254,254,254,221,221,221,220,220,220,220,220,220,221,221,221,254,254,254,255,255,255,255,255,255,254,254,254,220,220,220,220,220,220,220,220,220,220,220,220,254,254,254,255,255,255,255,254,255,251,249,250,145,143,144,208,208,208,33,33,33,37,37,37,33,33,33,31,31,31,32,33,37,36,35,41,30,28,33,31,29,30,214,213,209,143,142,138,252,252,252,255,254,255,255,255,255,254,254,254,220,220,220,220,220,220,220,220,220,220,220,220,254,254,254,255,255,255,255,255,255,255,255,255,216,216,216,221,221,221,221,221,221,216,216,216,255,255,255,255,255,255,255,253,254,255,254,255,149,147,148,209,207,208,31,29,30,30,28,29,29,27,28,39,37,38,32,32,32,27,27,25,34,31,38,35,34,29,211,209,210,146,146,136,255,255,255,254,255,255,255,255,255,255,255,255,216,216,216,221,221,221,221,221,221,216,216,216,255,255,255,255,255,255,254,254,254,255,255,255,220,220,220,223,223,223,223,223,223,220,220,220,255,255,255,254,254,254,251,251,251,253,253,253,145,143,144,207,205,206,69,65,66,60,56,57,60,56,57,56,50,52,58,57,52,56,56,46,61,55,65,64,61,52,200,197,204,144,146,133,248,249,251,254,255,253,254,254,254,255,255,255,220,220,220,223,223,223,223,223,223,220,220,220,255,255,255,254,254,254,255,255,255,251,251,251,222,222,222,215,215,215,215,215,215,222,222,222,251,251,251,255,255,255,255,255,255,255,255,255,141,139,140,218,214,215,65,61,62,73,67,69,73,67,69,76,67,70,74,71,66,69,66,57,71,65,77,66,63,54,215,212,223,145,147,134,254,255,255,251,255,252,255,255,255,251,251,251,222,222,222,215,215,215,215,215,215,222,222,222,251,251,251,255,255,255,255,255,255,254,254,254,223,223,223,221,221,221,221,221,221,223,223,223,254,254,254,255,255,255,255,255,255,252,252,252,143,141,142,216,212,213,69,65,66,73,67,69,79,73,75,76,67,70,70,66,63,80,76,73,73,65,76,77,73,70,213,208,215,143,143,135,253,254,255,253,254,255,255,255,255,254,254,254,223,223,223,221,221,221,221,221,221,223,223,223,254,254,254,255,255,255,254,254,254,255,255,255,216,216,216,219,219,219,219,219,219,216,216,216,255,255,255,254,254,254,255,255,255,249,249,249,145,143,144,213,211,212,85,81,82,93,89,90,90,86,87,86,80,82,88,84,85,95,90,94,86,80,82,89,83,85,208,205,198,144,143,141,255,255,255,255,254,255,254,254,254,255,255,255,216,216,216,219,219,219,219,219,219,216,216,216,255,255,255,254,254,254,254,254,254,250,250,250,226,226,226,222,222,222,222,222,222,226,226,226,250,250,250,254,254,254,255,254,255,255,254,255,146,144,145,211,209,210,86,84,85,101,99,100,81,79,80,95,93,94,96,94,95,81,75,85,97,95,82,95,89,91,208,208,180,154,150,149,255,255,246,250,247,255,254,254,254,250,250,250,226,226,226,222,222,222,222,222,222,226,226,226,250,250,250,254,254,254,188,188,188,187,187,187,219,219,219,219,219,219,219,219,219,219,219,219,187,187,187,188,188,188,188,186,187,185,183,184,146,144,145,208,208,208,211,211,211,205,205,205,213,213,213,207,207,207,209,207,208,211,208,217,208,208,182,217,211,213,194,195,153,149,145,142,186,185,167,192,189,198,188,188,188,187,187,187,219,219,219,219,219,219,219,219,219,219,219,219,187,187,187,188,188,188,190,186,185,189,185,174,222,222,232,220,222,221,220,222,221,222,222,232,189,185,174,190,186,185,191,191,189,183,185,184,145,145,147,211,207,206,97,87,85,97,88,83,93,88,84,86,85,83,86,85,83,93,88,84,97,88,83,97,87,85,211,207,206,145,145,147,183,185,184,191,191,189,190,186,185,189,185,174,222,222,232,220,222,221,220,222,221,222,222,232,189,185,174,190,186,185,181,191,192,180,190,179,212,219,225,213,220,213,213,220,213,212,219,225,180,190,179,181,191,192,181,180,178,188,188,188,144,144,146,211,209,212,88,82,82,93,87,87,85,81,80,94,92,93,94,92,93,85,81,80,93,87,87,88,82,82,211,209,212,144,144,146,188,188,188,181,180,178,181,191,192,180,190,179,212,219,225,213,220,213,213,220,213,212,219,225,180,190,179,181,191,192,187,184,191,190,189,185,227,216,224,230,219,217,230,219,217,227,216,224,190,189,185,187,184,191,194,190,187,191,187,186,144,142,143,215,213,218,86,84,89,95,93,98,88,86,89,88,86,89,88,86,89,88,86,89,95,93,98,86,84,89,215,213,218,144,142,143,191,187,186,194,190,187,187,184,191,190,189,185,227,216,224,230,219,217,230,219,217,227,216,224,190,189,185,187,184,191,183,183,183,183,189,185,220,216,217,220,222,219,220,222,219,220,216,217,183,189,185,183,183,183,188,183,180,189,184,181,148,142,142,210,206,207,87,85,90,88,87,92,87,85,88,93,89,88,93,89,88,87,85,88,88,87,92,87,85,90,210,206,207,148,142,142,189,184,181,188,183,180,183,183,183,183,189,185,220,216,217,220,222,219,220,222,219,220,216,217,183,189,185,183,183,183,193,188,184,183,192,189,222,216,218,212,220,223,212,220,223,222,216,218,183,192,189,193,188,184,186,187,189,196,192,191,149,141,138,211,203,201,95,91,92,94,92,95,83,79,78,97,89,86,97,89,86,83,79,78,94,92,95,95,91,92,211,203,201,149,141,138,196,192,191,186,187,189,193,188,184,183,192,189,222,216,218,212,220,223,212,220,223,222,216,218,183,192,189,193,188,184,186,183,190,175,185,194,230,218,222,220,220,228,220,220,228,230,218,222,175,185,194,186,183,190,171,190,204,174,183,188,147,143,140,224,214,212,86,80,80,93,91,92,93,89,88,93,86,80,93,86,80,93,89,88,93,91,92,86,80,80,224,214,212,147,143,140,174,183,188,171,190,204,186,183,190,175,185,194,230,218,222,220,220,228,220,220,228,230,218,222,175,185,194,186,183,190,139,177,198,133,178,197,219,220,222,213,224,220,213,224,220,219,220,222,133,178,197,139,177,198,139,180,208,148,171,187,143,147,150,211,206,203,91,87,86,81,82,84,92,92,92,88,85,80,88,85,80,92,92,92,81,82,84,91,87,86,211,206,203,143,147,150,148,171,187,139,180,208,139,177,198,133,178,197,219,220,222,213,224,220,213,224,220,219,220,222,133,178,197,139,177,198,126,177,220,123,176,208,226,220,224,223,218,212,223,218,212,226,220,224,123,176,208,126,177,220,118,173,212,139,175,199,134,145,151,210,209,207,211,211,211,205,209,212,206,210,213,211,211,209,211,211,209,206,210,213,205,209,212,211,211,211,210,209,207,134,145,151,139,175,199,118,173,212,126,177,220,123,176,208,226,220,224,223,218,212,223,218,212,226,220,224,123,176,208,126,177,220,78,98,219,93,99,223,213,219,209,232,222,220,226,214,216,217,222,218,95,99,224,81,103,215,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,81,103,215,95,99,224,217,222,218,226,214,216,232,222,220,213,219,209,93,99,223,78,98,219,97,108,224,80,98,222,132,177,206,126,178,218,120,171,214,129,174,207,85,103,227,83,95,203,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,83,95,203,85,103,227,129,174,207,120,171,214,126,178,218,132,177,206,80,98,222,97,108,224,86,94,219,81,99,209,133,176,210,128,180,202,133,184,211,130,172,210,88,109,216,88,97,214,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,97,214,88,109,216,130,172,210,133,184,211,128,180,202,133,176,210,81,99,209,86,94,219,87,99,221,95,104,223,58,64,174,50,52,163,57,60,175,49,56,170,82,93,211,91,107,220,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,91,107,220,82,93,211,49,56,170,57,60,175,50,52,163,58,64,174,95,104,223,87,99,221,90,99,230,87,100,205,50,64,161,51,69,145,50,67,147,56,70,175,86,100,209,87,100,228,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,87,100,228,86,100,209,56,70,175,50,67,147,51,69,145,50,64,161,87,100,205,90,99,230,92,102,226,47,60,162,56,69,171,50,66,151,43,60,150,87,100,214,82,98,209,87,100,228,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,87,100,228,82,98,209,87,100,214,43,60,150,50,66,151,56,69,171,47,60,162,92,102,226,84,96,206,56,66,164,54,56,165,60,59,163,66,66,178,89,93,218,93,104,219,82,98,219,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,82,98,219,93,104,219,89,93,218,66,66,178,60,59,163,54,56,165,56,66,164,84,96,206,52,64,162,50,63,155,51,63,163,50,64,163,84,96,204,92,104,222,82,98,209,89,104,219,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,88,100,218,89,104,219,82,98,209,92,104,222,84,96,204,50,64,163,51,63,163,50,63,155,52,64,162]}
  test_thing: {width:8,height:8, pixelSize: 3, data: [0,0,0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,255,0,0,0,0,255,0,0,0,0,255,0,254,0,255,255,255,0,0,0,0,255,0,0,255,0,0,0,0,255,255,0,255,0,255,0,255,255,68,68,68,0,0,0,0,255,0,0,255,0,0,0,0,0,255,0,0,255,0,0,255,0,136,136,136,0,0,0,0,255,0,0,255,0,0,0,0,0,255,0,0,255,0,0,255,0,187,187,187,0,0,0,0,255,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0,0,0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,0,0]}
  test_thing_2: {width:16 ,height:4, pixelSize: 3, data: [0,0,0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,0,0,0,255,0,0,0,0,255,0,0,0,254,0,0,0,255,255,255,0,255,0,255,0,255,255,255,255,255,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,0,0,17,17,17,34,34,34,51,51,51,68,68,68,85,85,85,102,102,102,119,119,119,136,136,136,153,153,153,170,170,170,187,187,187,204,204,204,221,221,221,0,255,0,0,0,0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,255,0,0,0,0]}

my_room = new room(32,32)
my_wall = new thing(0,0,IMG.test_room)
my_door = new thing(0,0,IMG.test_thing)
my_door_2 = new thing(4,12,IMG.test_thing_2)
my_room.layers.push(my_wall.layer)
my_room.layers.push(my_door.layer)
my_room.layers.push(my_door_2.layer)


###------------------------------------------ PS Events ----------------------------------------- ###
PS.Init = ->
  PS.GridSize G.GRID.WIDTH, G.GRID.HEIGHT
  PS.BeadFlash PS.ALL,PS.ALL,false
  PS.BeadColor PS.ALL,PS.ALL,0x000000
  PS.BeadBorderWidth PS.ALL,PS.ALL,0
  PS.BeadBorderColor PS.ALL,PS.ALL,0x000000
  PS.GridBGColor 0x0000
  PS.StatusFade false
  PS.StatusText 'Stuck in the Void: toy 3'
  PS.StatusColor(0xffffff)

  my_room.draw()


  PS.Clock 1

PS.Click = (x, y, data) ->
  "use strict"
  ###
  PS.ImageLoad "/assets/test_thing_2.bmp", () ->
    data = PS.ImageData(this)
    debug data
    alert data.data.length
    PS.DebugOpen()
    PS.Debug(String(data.data))
    PS.ImageBlit(data)
  ###

PS.Release = (x, y, data) ->
  "use strict"

PS.Enter = (x, y, data) ->
  "use strict"

PS.Leave = (x, y, data) ->
  "use strict"

PS.KeyDown = (key, shift, ctrl) ->
  "use strict"
  if key == PS.ARROW_LEFT
    my_door.x -= 1
    my_door.build_layer(32,32)
    my_room.layers[2] = my_door.layer
  else if key == PS.ARROW_RIGHT
    my_door.x += 1
    my_door.build_layer(32,32)
    my_room.layers[2] = my_door.layer
  else if key == PS.ARROW_UP
    my_door.y -= 1
    my_door.build_layer(32,32)
    my_room.layers[2] = my_door.layer
  else if key == PS.ARROW_DOWN
    my_door.y += 1
    my_door.build_layer(32,32)
    my_room.layers[2] = my_door.layer
PS.KeyUp = (key, shift, ctrl) ->
  "use strict"

PS.Wheel = (dir) ->
  "use strict"

PS.Tick = ->
  "use strict"
  my_room.draw()




### END OF GAME CODE ###